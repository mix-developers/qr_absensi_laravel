/**======================================================================
=========================================================================
Template Name: Nextro - Most Complete Bootstrap Admin Template
Author: Phoenixcoded
Support: support@phoenixcoded.net
File: style.css
=========================================================================
=================================================================================== */
body {
    margin: 0;
    overflow-x: hidden;
}

a {
    outline: none;
    text-decoration: none;
}

a:focus, a:hover {
    outline: none;
    text-decoration: none;
}

h1,
h2,
h3,
h4,
h5 {
    font-weight: 600;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    color: #111;
}

h1 {
    font-size: 2.5rem;
}

h2 {
    font-size: 36px;
}

h3 {
    font-size: 24px;
}

h4 {
    font-size: 20px;
}

h5 {
    font-size: 18px;
}

h6 {
    font-size: 16px;
    font-weight: 400;
}

p {
    font-size: 15px;
}

section {
    padding-top: 90px;
    padding-bottom: 90px;
}

.bg-dark {
    background: #1c232f !important;
    color: #fff;
}

.bg-dark p {
    color: #b5bdca;
}

.border-white {
    border-color: rgba(181, 189, 202, 0.15) !important;
}

.theme-alt-bg {
    background: #eff3f6;
}

.title {
    position: relative;
    text-align: center;
    margin-bottom: 50px;
}

.title h2 {
    margin-bottom: 10px;
    z-index: 3;
}

.title h2 span {
    font-weight: 400;
}

@media only screen and (max-width: 992px) {
    .title {
        margin-bottom: 30px;
    }

    .title h2 {
        margin-bottom: 10px;
    }
}

.bg-primary {
    background: #7267EF !important;
}

.bg-success {
    background: #17C666 !important;
}

.bg-dark-icon {
    background: #1c232f !important;
}

.btn {
    padding: 10px 20px;
    border-radius: 0.25rem;
    font-size: 14px;
    transition: all 0.3s ease-in-out;
    background-size: 100% 200% !important;
    background-position: bottom !important;
}

.btn.btn-primary {
    color: #fff;
    background: #7267EF;
    border-color: #5d50ed;
}

.btn.btn-primary:hover {
    color: #fff;
    background-color: #5042eb;
    border-color: #5042eb;
}

.btn.btn-success {
    color: #fff;
    background: #17C666;
    border-color: #14af5a;
}

.btn.btn-success:hover {
    color: #fff;
    background-color: #13a153;
    border-color: #13a153;
}

.btn.btn-danger {
    color: #fff;
    background: #EA4D4D;
    border-color: #e73636;
}

.btn.btn-danger:hover {
    color: #fff;
    background-color: #e62929;
    border-color: #e62929;
}

.btn.btn-dark {
    color: #fff;
    background: linear-gradient(to top, #263238, #3b4d56);
    border-color: #202a2f;
}

.btn.btn-dark:hover {
    color: #fff;
    background-color: #171e21;
    border-color: #11171a;
}

.btn:hover {
    background-position: top !important;
}

.btn-facebook {
    color: #fff;
}

.btn-facebook:hover, .btn-facebook:not(:disabled):not(.disabled).active, .btn-facebook:not(:disabled):not(.disabled):active {
    color: #fff;
}

.btn-twitter {
    color: #fff;
}

.btn-twitter:hover, .btn-twitter:not(:disabled):not(.disabled).active, .btn-twitter:not(:disabled):not(.disabled):active {
    color: #fff;
}

.btn-linkedin {
    color: #fff;
}

.btn-linkedin:hover, .btn-linkedin:not(:disabled):not(.disabled).active, .btn-linkedin:not(:disabled):not(.disabled):active {
    color: #fff;
}

.right-nav {
    position: fixed;
    z-index: 1024;
    right: -30px;
    top: 50%;
    transform: translateY(-50%);
    transition: all 0.3s ease-in-out;
}

.right-nav.active {
    right: 20px;
}

.right-nav ul {
    margin-bottom: 0;
    text-align: right;
}

.right-nav ul .nav-item .nav-link {
    padding: 0;
    transition: all 0.3s ease-in-out;
    margin-bottom: 10px;
}

.right-nav ul .nav-item .nav-link .bullet {
    width: 20px;
    height: 20px;
    position: relative;
}

.right-nav ul .nav-item .nav-link .bullet:after, .right-nav ul .nav-item .nav-link .bullet:before {
    content: "";
    border-radius: 50%;
    width: 100%;
    height: 100%;
    position: absolute;
    right: -3px;
    top: 0;
    transition: all 0.3s ease-in-out;
}

.right-nav ul .nav-item .nav-link .bullet:before {
    border: 2px solid #7267EF;
}

.right-nav ul .nav-item .nav-link .bullet:after {
    background: #7267EF;
    transform: scale(0.4);
}

.right-nav ul .nav-item .nav-link.active .bullet:after {
    transform: scale(1);
}

.b-brand {
    display: inline-flex;
    align-items: center;
}

.b-brand .b-bg {
    background: #7267EF;
    border-radius: 3px;
    width: 40px;
    height: 40px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-size: 28px;
    color: #fff;
    position: relative;
}

.b-brand .b-title {
    margin-left: 10px;
    font-weight: 400;
    color: #fff;
    font-size: 24px;
}

header {
    background: linear-gradient(to bottom, #242e3e 0%, #3a4c67 100%) !important;
    overflow: hidden;
}

header h2,
  header h4 {
    font-weight: 400;
}

header h4 {
    color: #7267EF;
}

header:before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%233d4856' fill-opacity='1'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    background-position: top;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: "";
}

header:after {
    background-image: linear-gradient(to top, #242e3e 40%, transparent 100%);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: "";
}

header .codrops-header {
    padding: 3vmax 0 0 3vmax;
    position: absolute;
    width: auto;
    z-index: 1028;
}

header .h-page-block {
    overflow: hidden;
    position: relative;
    z-index: 1024;
    height: 100vh;
    min-height: 800px;
    max-height: 1200px;
    padding: 7vmax 7vmax 0;
    visibility: visible;
    text-align: center;
}

header .h-page-block .img-mokeup {
    margin-top: 7vmax;
}

.top-features h4 {
    color: #7267EF;
    font-size: 16px;
    position: relative;
    margin-bottom: 30px;
}

.top-features h4:after {
    content: '';
    position: absolute;
    height: 3px;
    width: 80px;
    background-color: #e4e3e3;
    background-color: #eff3f6;
    left: 0;
    top: 30px;
}

.layouts .nav-pills {
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    padding-bottom: 15px;
}

.layouts .nav-pills .nav-link {
    padding: 10px 20px;
    margin-right: 15px;
    background: rgba(255, 255, 255, 0.08);
    color: rgba(255, 255, 255, 0.8);
}

.layouts .nav-pills .nav-link .badge {
    background: #fff;
    padding: 4px 6px;
    vertical-align: middle;
    font-size: 90%;
    line-height: 0.9;
    position: relative;
    left: -7px;
    top: -1px;
}

.layouts .nav-pills .nav-link.active {
    background: #7267EF;
    color: #fff;
}

.layouts .layouts-block {
    position: relative;
    overflow: hidden;
}

.layouts .layouts-block img {
    transition: all 0.3s ease-in-out;
    transform-origin: 0 0;
}

.layouts .layouts-block .hover-data {
    padding-bottom: 50px;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.3);
    opacity: 0;
    transition: all 0.3s ease-in-out;
}

.layouts .layouts-block:hover img {
    transform: scale(1.8);
}

.layouts .layouts-block:hover .hover-data {
    opacity: 1;
    padding-bottom: 0;
}

.layouts .layouts-block ~ h5 {
    margin-bottom: 30px;
}

.support-buy-now {
    position: absolute;
    display: flex;
    width: 100%;
    justify-content: center;
    transform: translatey(-50%);
    overflow: hidden;
}

.support-buy-now a {
    text-align: center;
    padding: 15px 35px;
    border-radius: 10px;
    display: inline-block;
    position: relative;
    z-index: 10;
    border: 2px solid #7267EF;
    background: #fff;
}

.support-buy-now a h3,
    .support-buy-now a h6 {
    color: #7267EF;
}

.mail-block {
    background: #fff;
    border-radius: 5px;
    padding: 60px 60px 30px;
}

.mail-block .input-group > .form-control:not(:last-child) {
    background: #eff3f6;
    padding: 5px 20px;
    border: none;
    height: 45px;
    border-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
    border-bottom-right-radius: 0.25rem;
    margin-right: 15px;
}

.mail-block .input-group > .input-group-append > .btn {
    border-top-left-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
}

.mail-block h2 {
    font-size: 30px;
}

.extra-pages .ext-icon {
    display: flex;
    width: 50px;
    height: 50px;
    align-items: center;
    justify-content: center;
    color: #fff;
    border-radius: 3px;
    font-size: 24px;
}

.extra-pages .ext-img-block {
    position: relative;
    padding-bottom: 50px;
}

.extra-pages .ext-img-block img {
    width: calc(100% - 50px);
    border-radius: 3px;
    box-shadow: 0 0 1px 1px rgba(52, 58, 64, 0.15);
}

.extra-pages .ext-img-block img + img {
    position: absolute;
}

.extra-pages .ext-img-block img:first-child {
    margin-left: 50px;
    position: relative;
}

.extra-pages .ext-img-block img:nth-child(2) {
    top: 25px;
    right: 25px;
    transition: all 0.4s ease-in;
}

.extra-pages .ext-img-block img:nth-child(3) {
    top: 50px;
    right: 50px;
    transition: all 0.8s ease-in;
}

.extra-pages .ext-img-block img:hover {
    z-index: 1024;
}

.extra-pages .ext-img-block[data-sr-id] img:nth-child(2) {
    top: 0;
    right: 0;
}

.extra-pages .ext-img-block[data-sr-id] img:nth-child(3) {
    top: 0;
    right: 0;
}

.menu-styler {
    position: relative;
    overflow: hidden;
}

.menu-styler .top-title {
    color: #7267EF;
}

.menu-styler .m-style-img {
    position: absolute;
    top: 0;
    left: 50%;
    z-index: 1;
}

.menu-styler .m-style-img + .row {
    position: relative;
    z-index: 5;
}

.menu-styler .popup-vid {
    margin-left: 50px;
}

.menu-styler .popup-vid i:before {
    font-size: 50px;
    color: rgba(255, 255, 255, 0.7);
    transition: all 0.3s ease-in-out;
}

.menu-styler .popup-vid:hover i:before {
    color: white;
}

.menu-styler:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to left, rgba(27, 28, 29, 0.3), rgba(27, 28, 29, 0.7), rgba(27, 28, 29, 0.3));
    z-index: 3;
}

.owl-carousel .owl-dots,
.owl-carousel .owl-dots.disabled {
    text-align: center;
    display: block;
}

.owl-carousel .owl-dots .owl-dot,
  .owl-carousel .owl-dots.disabled .owl-dot {
    display: inline-block;
    zoom: 1;
    *display: inline;
}

.owl-carousel .owl-dots .owl-dot span,
    .owl-carousel .owl-dots.disabled .owl-dot span {
    width: 16px;
    height: 16px;
    margin: 5px 7px;
    background: transparent;
    border: 2px solid #686c71;
    display: block;
    -webkit-backface-visibility: visible;
    transition: opacity 200ms ease;
    border-radius: 50%;
}

.owl-carousel .owl-dots .owl-dot.active span,
    .owl-carousel .owl-dots .owl-dot:hover span,
    .owl-carousel .owl-dots.disabled .owl-dot.active span,
    .owl-carousel .owl-dots.disabled .owl-dot:hover span {
    background: #686c71;
}

.owl-stage {
    align-items: stretch;
    display: flex;
}

.owl-stage .owl-item {
    box-sizing: border-box;
    height: 100%;
}

.owl-stage .owl-item .item {
    height: 100%;
}

.reviews .comt-block {
    background: #F1F1F1;
    padding: 30px 25px;
    text-align: center;
    border-radius: 5px;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.16);
    margin: 10px 10px 30px;
}

.reviews .comt-block.main {
    padding: 40px;
}

.reviews .comt-block span {
    color: #111;
    font-weight: 600;
}

.price .price-bg-block {
    overflow: hidden;
    position: relative;
}

.price .price-bg-block:after, .price .price-bg-block:before {
    content: "";
    position: absolute;
    left: 0;
    width: 100%;
    height: 500px;
    z-index: 1;
}

.price .price-bg-block:before {
    bottom: 0;
    background: linear-gradient(to top, #242e3e 0%, transparent 100%);
}

.price .price-bg-block:after {
    top: 0;
    background: linear-gradient(to bottom, #242e3e 0%, transparent 100%);
}

.price .price-block {
    text-align: center;
    border-radius: 3px;
    position: relative;
    color: #686c71;
}

.price .price-block .fas {
    color: #7267EF;
    position: relative;
    top: 4px;
}

.price .price-block p {
    color: #686c71;
}

.price .price-block h2 {
    line-height: 1;
    margin-bottom: 0;
}

.price .price-block .amount {
    font-size: 45px;
    color: #111;
}

.price .price-block .amount span {
    font-size: 20px;
}

.price .price-ct {
    position: relative;
}

.price .small-price {
    position: absolute;
    left: 0;
}

.price .small-price .price-block {
    background: #fff;
    box-shadow: 4px 4px 21px 0 rgba(0, 0, 0, 0.16);
    padding: 40px 30px;
    z-index: 4;
}

.price .big-price {
    margin-left: -80px;
}

.price .big-price .price-block {
    background: #eff3f6;
    box-shadow: 4px 4px 21px 0 rgba(0, 0, 0, 0.16);
    padding: 80px 40px 80px 80px;
    z-index: 1;
}

footer {
    color: #fff;
    padding: 90px 0 0;
}

footer a {
    color: rgba(255, 255, 255, 0.8);
    transition: all 0.3s ease-in-out;
}

footer a:hover {
    color: #fff;
    text-decoration: underline;
}

footer h5 {
    position: relative;
    color: #fff;
    margin-bottom: 30px;
}

footer h5:before {
    content: "";
    position: absolute;
    width: 40px;
    height: 1px;
    bottom: -5px;
    left: 0;
    background-color: #fff;
}

footer .list-unstyled li a {
    font-size: 14px;
}

footer .sos-icon li {
    display: inline-block;
}

footer .sos-icon a {
    width: auto;
    height: 45px;
    border-radius: 50%;
    display: inline-flex;
    margin-right: 12px;
    justify-content: center;
    font-size: 16px !important;
    transition: all 0.3s ease-in-out;
}

footer .sos-icon a:focus, footer .sos-icon a:hover {
    text-decoration: none;
    box-shadow: 0 6px 6px 0 rgba(0, 0, 0, 0.2);
    transform: translateY(-3px);
}

footer .b-footer {
    position: relative;
    padding-top: 100px;
}

footer .b-footer p {
    margin-bottom: 0;
    padding: 10px 0;
    border-top: 1px solid rgba(255, 255, 255, 0.18);
    z-index: 1;
    position: relative;
}

footer .b-footer .bottom-tag {
    position: absolute;
    bottom: 0;
    right: 0;
    font-size: 100px;
    opacity: 0.05;
    width: 100%;
    text-align: center;
    z-index: 1;
}

@media only screen and (max-width: 992px) {
    h1 {
        font-size: 45px;
    }

    h2 {
        font-size: 35px;
    }

    h3 {
        font-size: 20px;
    }

    h4 {
        font-size: 18px;
    }

    h5 {
        font-size: 16px;
    }

    h6 {
        font-size: 14px;
    }

    section {
        padding-top: 40px;
        padding-bottom: 40px;
    }

    .btn {
        padding: 6px 12px;
        margin-bottom: 15px;
    }

    .subscribe .mail-block {
        padding: 15px;
    }

    .support-buy-now:after {
        padding-left: calc(50% - 80px);
        font-size: 160px;
    }

    footer {
        padding: 40px 0 0;
    }

    footer .list-unstyled li a {
        font-size: 16px;
    }

    footer h5 {
        margin-top: 20px;
    }

    footer .b-footer {
        padding-top: 10px;
    }

    footer .b-footer p {
        padding: 10px 0;
    }

    footer .b-footer .bottom-tag {
        display: none;
    }

    .extra-pages {
        text-align: center;
    }

    .extra-pages .ext-icon {
        margin: 0 auto;
    }
}

@media only screen and (max-width: 991px) {
    .menu-styler .m-style-img {
        display: none;
    }

    .menu-styler .m-style-img + .row > div:last-child {
        text-align: center;
    }

    .menu-styler .popup-vid {
        margin: 0;
    }
}

@media only screen and (max-width: 768px) {
    .layouts .nav-pills .nav-link {
        margin-bottom: 15px;
    }
}

@media only screen and (max-width: 767px) {
    .right-nav {
        display: none;
    }

    .price {
        overflow: hidden;
    }

    .price .big-price .price-block {
        padding: 40px 30px;
    }

    .price .small-price {
        position: relative;
        margin-bottom: 20px;
    }
}

.fixed-button {
    position: fixed;
    bottom: -50px;
    right: 30px;
    box-shadow: 0 13px 21px rgba(0, 0, 0, 0.15);
    opacity: 0;
    z-index: 1025;
    border-radius: 25px;
    transition: all 0.5s ease;
}

.fixed-button .btn {
    margin: 0;
    background: #79b530;
    color: #fff;
    border-radius: 25px;
    padding: 10px 20px;
    font-size: 16px;
    border-bottom: 2px solid #5e8d25;
}

.fixed-button.active {
    bottom: 50px;
    opacity: 1;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
